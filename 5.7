#include <iostream>
#include <string>
#include <cctype>

bool isLeapYear(int year) {
    return (year % 400 == 0) || ((year % 4 == 0) && (year % 100 != 0));
}

int getCenturyValue(int year) {
    int century = year / 100;
    return (3 - (century % 4)) * 2;
}

int getYearValue(int year) {
    int lastTwoDigits = year % 100;
    int leapYearAdjustment = lastTwoDigits / 4;
    return lastTwoDigits + leapYearAdjustment;
}

int getMonthValue(int month, int year) {
    switch (month) {
        case 1: // January
            return isLeapYear(year) ? 6 : 0;
        case 2: // February
            return isLeapYear(year) ? 2 : 3;
        case 3: // March
            return 3;
        case 4: // April
            return 6;
        case 5: // May
            return 1;
        case 6: // June
            return 4;
        case 7: // July
            return 6;
        case 8: // August
            return 2;
        case 9: // September
            return 5;
        case 10: // October
            return 0;
        case 11: // November
            return 3;
        case 12: // December
            return 5;
        default:
            return 0;
    }
}

void getInput(int& month, int& day, int& year) {
    std::string input;
    std::cout << "Enter the date (e.g., July 4, 2008): ";
    std::getline(std::cin, input);

    // Convert month to lowercase for case-insensitive comparison
    for (char& c : input) {
        c = std::tolower(c);
    }

    std::string monthNames[] = {"january", "february", "march", "april", "may", "june", "july", "august", "september", "october", "november", "december"};

    for (int i = 0; i < 12; ++i) {
        if (input.find(monthNames[i]) != std::string::npos) {
            month = i + 1;
            break;
        }
    }

    // Extract day and year
    size_t commaPos = input.find(',');
    size_t spacePos = input.find_first_of(" \t");

    day = std::stoi(input.substr(spacePos + 1, commaPos - spacePos - 1));
    year = std::stoi(input.substr(commaPos + 2));
}

int main() {
    int month, day, year;
    getInput(month, day, year);

    int dayOfWeek = (day + getMonthValue(month, year) + getYearValue(year) + getCenturyValue(year)) % 7;

    std::string days[] = {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};

    std::cout << "The day of the week is: " << days[dayOfWeek] << std::endl;

    return 0;
}



