#include <iostream>
#include <iomanip>

int main() {
    const double HOURLY_RATE = 16.78;
    const double OVERTIME_RATE = 1.5 * HOURLY_RATE;
    const int STANDARD_HOURS = 40;
    const double SOCIAL_SECURITY_TAX_RATE = 0.06;
    const double FEDERAL_INCOME_TAX_RATE = 0.14;
    const double STATE_INCOME_TAX_RATE = 0.05;
    const double UNION_DUES = 10.0;
    const double HEALTH_INSURANCE_COST = 35.0;

    int hoursWorked, dependents;

    std::cout << "Enter the number of hours worked in a week: ";
    std::cin >> hoursWorked;
    std::cout << "Enter the number of dependents: ";
    std::cin >> dependents;

    double grossPay;
    if (hoursWorked <= STANDARD_HOURS) {
        grossPay = hoursWorked * HOURLY_RATE;
    } else {
        grossPay = STANDARD_HOURS * HOURLY_RATE + (hoursWorked - STANDARD_HOURS) * OVERTIME_RATE;
    }

    double socialSecurityTax = grossPay * SOCIAL_SECURITY_TAX_RATE;
    double federalIncomeTax = grossPay * FEDERAL_INCOME_TAX_RATE;
    double stateIncomeTax = grossPay * STATE_INCOME_TAX_RATE;
    double unionDues = UNION_DUES;
    double healthInsurance = (dependents >= 3) ? HEALTH_INSURANCE_COST : 0.0;

    double netPay = grossPay - socialSecurityTax - federalIncomeTax - stateIncomeTax - unionDues - healthInsurance;

    std::cout << std::fixed << std::setprecision(2);
    std::cout << "Gross Pay: $" << grossPay << std::endl;
    std::cout << "Social Security Tax: $" << socialSecurityTax << std::endl;
    std::cout << "Federal Income Tax: $" << federalIncomeTax << std::endl;
    std::cout << "State Income Tax: $" << stateIncomeTax << std::endl;
    std::cout << "Union Dues: $" << unionDues << std::endl;
    std::cout << "Health Insurance: $" << healthInsurance << std::endl;
    std::cout << "Net Take-Home Pay: $" << netPay << std::endl;

    return 0;
}
